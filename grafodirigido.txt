#include <iostream>
#include <vector>
using namespace std;

class GrafoDirigido {
private:
    int numVertices;
    vector<vector<int>> matrizAdyacencia;

public:
    GrafoDirigido(int n) {
        numVertices = n;
        matrizAdyacencia.resize(numVertices, vector<int>(numVertices, 0));
    }

    void agregarArista(int origen, int destino) {
        if (origen >= 0 && origen < numVertices && destino >= 0 && destino < numVertices) {
            matrizAdyacencia[origen][destino] = 1;
        }
    }

    void imprimirGrafo() {
        for (int i = 0; i < numVertices; i++) {
            for (int j = 0; j < numVertices; j++) {
                cout << matrizAdyacencia[i][j] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    int numVertices = 5;
    GrafoDirigido grafo(numVertices);

    grafo.agregarArista(0, 1);
    grafo.agregarArista(0, 4);
    grafo.agregarArista(1, 2);
    grafo.agregarArista(1, 3);
    grafo.agregarArista(2, 3);
    grafo.agregarArista(3, 4);

    grafo.imprimirGrafo();

    return 0;
}
